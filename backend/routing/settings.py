"""
Django settings for routing project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ja0_xdh!cdn3hhfw8k^!)&lv5h2j$=aou@^#ut@a9pr63-!uph'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '52.200.16.208', '127.0.0.1']

APSCHEDULER_RUN_NOW_TIMEOUT = 5  # Seconds

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'routing.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'routing.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'steadyfitdb',
        'USER': 'steadyfit',
        'PASSWORD': 'eecs441project',
        'HOST': 'localhost',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# challenges = {
#     "running": {
#         "file": "running_challenge.csv",
#         "name": "Running Challenge",
#         "default_vars": {
#             "distance": [0, 0.1, 1, 3, 6, 10]  # miles
#         },
#         "get_challenge_tuple": lambda d, f: (d,), # (distance, frequency) -> challenge_params
#         "get_generic_tuple": lambda d: (d, None)  # challenge_params - > (distance, frequency)
#     },
#     "walking": {
#         "file": "walking_challenge.csv",
#         "name": "Walking Challenge",
#         "default_vars": {
#             "distance": [0, 0.1, 1, 3, 6, 10]  # miles
#         },
#         "get_challenge_tuple": lambda d, f: (d,),
#         "get_generic_tuple": lambda d: (d, None)
#     },
#     "swimming": {
#         "file": "swimming_challenge.csv",
#         "name": "Swimming Challenge",
#         "default_vars": {
#             "distance": [0, 0.1, 0.5, 1, 3, 5]  # miles
#         },
#         "get_challenge_tuple": lambda d, f: (d,),
#         "get_generic_tuple": lambda d: (d, None)
#     },
#     "strengthTraining": {
#         "file": "strength_challenge.csv",
#         "name": "Strength Training Challenge",
#         "default_vars": {
#             "frequency": [0, 1, 2, 3, 5, 8, 12]  # times a week
#         },
#         "get_challenge_tuple": lambda d, f: (f,),
#         "get_generic_tuple": lambda f: (None, f)
#     },
#     "cycling": {
#         "file": "cycling_challenge.csv",
#         "name": "Cycling Challenge",
#         "default_vars": {
#             "distance": [0, 1, 3, 5, 8, 13, 21, 34, 54]  # Miles
#         },
#         "get_challenge_tuple": lambda d, f: (d,),
#         "get_generic_tuple": lambda d: (d, None)
#     }
# }